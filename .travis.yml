language: android   # 声明构建语言环境
dist: trusty
install: ant deps

notifications:      # 每次构建的时候是否通知，如果不想收到通知邮箱（个人感觉邮件贼烦），那就设置 false 吧
  email: false

sudo: false         # sudo 权限

android:            # 配置信息
  components:
    - tools
    # The BuildTools version used by your project
    - build-tools-29.0.0

    # The SDK version used to compile your project
    - android-29

    # Additional components
    - extra-google-google_play_services
    - extra-google-m2repository
    - extra-android-m2repository     # Android Support Repository
    - extra-android-support          # Support Library

    # Specify at least one system image,
    # if you need to run emulator(s) during your tests
    - sys-img-x86-android-26
    - sys-img-armeabi-v7a-android-17
  licenses:
    - 'android-sdk-preview-license-52d11cd2'
    - 'android-sdk-license-.+'
    - 'google-gdk-license-.+'

before_install:
  - cd trail/app
  - chmod +x gradlew  # 改变 gradlew 的访问权限
  - gem install fir-cli
  # Emulator Management: Create, Start and Wait
  - echo no | android create avd --force -n test -t android-22 --abi armeabi-v7a -c 100M
  - emulator -avd test -no-audio -no-window &
  - android-wait-for-emulator
  - adb shell input keyevent 82 &

script:              # 执行:下面的命令
  - ./gradlew assembleRelease       #打包apk脚本
  - ./gradlew test --continue       #执行单元测试
  - ./gradlew clean build connectedCheck -PdisablePreDex --stacktrace"       #执行功能测试，如果连接到device
  - ./gradlew connectToSmartphoneTestFarm
  - ./gradlew build connectedCheck
#  - ./gradlew connectedCheck        #执行功能测试，如果连接到device
before_deploy:       # 部署之前
  # 使用 mv 命令进行修改 apk 文件的名字
  - mv app/build/outputs/apk/app-release.apk app/build/outputs/apk/buff.apk

deploy:              # 部署
  provider: releases # 部署到 GitHub Release，除此之外，Travis CI 还支持发布到 fir.im、AWS、Google App Engine 等
  api_key:           # 填写 GitHub 的 token （Settings -> Personal access tokens -> Generate new token）
    secure: 7f4dc45a19f742dce39cbe4d1e5852xxxxxxxxx
  file: app/build/outputs/apk/buff.apk   # 部署文件路径
  skip_cleanup: true     # 设置为 true 以跳过清理,不然 apk 文件就会被清理
  on:     # 发布时机
    tags: true       # tags 设置为 true 表示只有在有 tag 的情况下才部署

after_deploy:
  - fir p app/build/outputs/apk/app-release.apk -T $FIR_TOKEN -c "`git cat-file tag $TRAVIS_TAG`"
